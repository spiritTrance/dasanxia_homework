INTTK	int
IDENFR	g
ASSIGN	=
INTLTR	0
SEMICN	;
INTTK	int
IDENFR	func
LPARENT	(
INTTK	int
IDENFR	n
RPARENT	)
LBRACE	{
IDENFR	g
ASSIGN	=
IDENFR	g
PLUS	+
IDENFR	n
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	g
RPARENT	)
SEMICN	;
RETURNTK	return
IDENFR	g
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	i
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i
GTR	>
INTLTR	10
AND	&&
IDENFR	func
LPARENT	(
IDENFR	i
RPARENT	)
RPARENT	)
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
ELSETK	else
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i
GTR	>
INTLTR	11
AND	&&
IDENFR	func
LPARENT	(
IDENFR	i
RPARENT	)
RPARENT	)
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
ELSETK	else
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i
LEQ	<=
INTLTR	99
OR	||
IDENFR	func
LPARENT	(
IDENFR	i
RPARENT	)
RPARENT	)
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
ELSETK	else
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i
LEQ	<=
INTLTR	100
OR	||
IDENFR	func
LPARENT	(
IDENFR	i
RPARENT	)
RPARENT	)
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
ELSETK	else
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
IFTK	if
LPARENT	(
NOT	!
IDENFR	func
LPARENT	(
INTLTR	99
RPARENT	)
AND	&&
IDENFR	func
LPARENT	(
INTLTR	100
RPARENT	)
RPARENT	)
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
ELSETK	else
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
