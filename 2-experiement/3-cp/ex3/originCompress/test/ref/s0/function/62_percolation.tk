INTTK	int
IDENFR	array
LBRACK	[
INTLTR	110
RBRACK	]
SEMICN	;
INTTK	int
IDENFR	n
SEMICN	;
VOIDTK	void
IDENFR	init
LPARENT	(
INTTK	int
IDENFR	n
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	n
MULT	*
IDENFR	n
PLUS	+
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	array
LBRACK	[
IDENFR	i
RBRACK	]
ASSIGN	=
MINU	-
INTLTR	1
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
RBRACE	}
INTTK	int
IDENFR	findfa
LPARENT	(
INTTK	int
IDENFR	a
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	array
LBRACK	[
IDENFR	a
RBRACK	]
EQL	==
IDENFR	a
RPARENT	)
RETURNTK	return
IDENFR	a
SEMICN	;
ELSETK	else
LBRACE	{
IDENFR	array
LBRACK	[
IDENFR	a
RBRACK	]
ASSIGN	=
IDENFR	findfa
LPARENT	(
IDENFR	array
LBRACK	[
IDENFR	a
RBRACK	]
RPARENT	)
SEMICN	;
RETURNTK	return
IDENFR	array
LBRACK	[
IDENFR	a
RBRACK	]
SEMICN	;
RBRACE	}
RBRACE	}
VOIDTK	void
IDENFR	mmerge
LPARENT	(
INTTK	int
IDENFR	a
COMMA	,
INTTK	int
IDENFR	b
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	m
ASSIGN	=
IDENFR	findfa
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
INTTK	int
IDENFR	n
ASSIGN	=
IDENFR	findfa
LPARENT	(
IDENFR	b
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	m
NEQ	!=
IDENFR	n
RPARENT	)
IDENFR	array
LBRACK	[
IDENFR	m
RBRACK	]
ASSIGN	=
IDENFR	n
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	t
COMMA	,
IDENFR	m
SEMICN	;
INTTK	int
IDENFR	a
COMMA	,
IDENFR	b
SEMICN	;
IDENFR	t
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	t
RPARENT	)
LBRACE	{
IDENFR	t
ASSIGN	=
IDENFR	t
MINU	-
INTLTR	1
SEMICN	;
IDENFR	n
ASSIGN	=
INTLTR	4
SEMICN	;
IDENFR	m
ASSIGN	=
INTLTR	10
SEMICN	;
INTTK	int
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
INTTK	int
IDENFR	flag
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	init
LPARENT	(
IDENFR	n
RPARENT	)
SEMICN	;
INTTK	int
IDENFR	k
ASSIGN	=
IDENFR	n
MULT	*
IDENFR	n
PLUS	+
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LSS	<
IDENFR	m
RPARENT	)
LBRACE	{
IDENFR	a
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	b
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
NOT	!
IDENFR	flag
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	loc
ASSIGN	=
IDENFR	n
MULT	*
LPARENT	(
IDENFR	a
MINU	-
INTLTR	1
RPARENT	)
PLUS	+
IDENFR	b
SEMICN	;
IDENFR	array
LBRACK	[
IDENFR	loc
RBRACK	]
ASSIGN	=
IDENFR	loc
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	a
EQL	==
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	array
LBRACK	[
INTLTR	0
RBRACK	]
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
INTLTR	0
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	a
EQL	==
IDENFR	n
RPARENT	)
LBRACE	{
IDENFR	array
LBRACK	[
IDENFR	k
RBRACK	]
ASSIGN	=
IDENFR	k
SEMICN	;
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
IDENFR	k
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	b
LSS	<
IDENFR	n
AND	&&
IDENFR	array
LBRACK	[
IDENFR	loc
PLUS	+
INTLTR	1
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
IDENFR	loc
PLUS	+
INTLTR	1
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	b
GTR	>
INTLTR	1
AND	&&
IDENFR	array
LBRACK	[
IDENFR	loc
MINU	-
INTLTR	1
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
IDENFR	loc
MINU	-
INTLTR	1
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	a
LSS	<
IDENFR	n
AND	&&
IDENFR	array
LBRACK	[
IDENFR	loc
PLUS	+
IDENFR	n
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
IDENFR	loc
PLUS	+
IDENFR	n
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	a
GTR	>
INTLTR	1
AND	&&
IDENFR	array
LBRACK	[
IDENFR	loc
MINU	-
IDENFR	n
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	mmerge
LPARENT	(
IDENFR	loc
COMMA	,
IDENFR	loc
MINU	-
IDENFR	n
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	array
LBRACK	[
INTLTR	0
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
AND	&&
IDENFR	array
LBRACK	[
IDENFR	k
RBRACK	]
NEQ	!=
MINU	-
INTLTR	1
AND	&&
IDENFR	findfa
LPARENT	(
INTLTR	0
RPARENT	)
EQL	==
IDENFR	findfa
LPARENT	(
IDENFR	k
RPARENT	)
RPARENT	)
LBRACE	{
IDENFR	flag
ASSIGN	=
INTLTR	1
SEMICN	;
INTTK	int
IDENFR	tmp
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	tmp
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RBRACE	}
RBRACE	}
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
NOT	!
IDENFR	flag
RPARENT	)
LBRACE	{
IDENFR	putint
LPARENT	(
MINU	-
INTLTR	1
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RBRACE	}
RBRACE	}
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
