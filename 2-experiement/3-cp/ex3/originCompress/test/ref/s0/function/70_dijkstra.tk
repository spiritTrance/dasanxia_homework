CONSTTK	const
INTTK	int
IDENFR	INF
ASSIGN	=
INTLTR	65535
SEMICN	;
INTTK	int
IDENFR	e
LBRACK	[
INTLTR	16
RBRACK	]
LBRACK	[
INTLTR	16
RBRACK	]
SEMICN	;
INTTK	int
IDENFR	book
LBRACK	[
INTLTR	16
RBRACK	]
SEMICN	;
INTTK	int
IDENFR	dis
LBRACK	[
INTLTR	16
RBRACK	]
SEMICN	;
INTTK	int
IDENFR	n
COMMA	,
IDENFR	m
SEMICN	;
INTTK	int
IDENFR	v1
COMMA	,
IDENFR	v2
COMMA	,
IDENFR	w
SEMICN	;
VOIDTK	void
IDENFR	Dijkstra
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	i
COMMA	,
IDENFR	j
SEMICN	;
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
IDENFR	dis
LBRACK	[
IDENFR	i
RBRACK	]
ASSIGN	=
IDENFR	e
LBRACK	[
INTLTR	1
RBRACK	]
LBRACK	[
IDENFR	i
RBRACK	]
SEMICN	;
IDENFR	book
LBRACK	[
IDENFR	i
RBRACK	]
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	book
LBRACK	[
INTLTR	1
RBRACK	]
ASSIGN	=
INTLTR	1
SEMICN	;
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	n
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	min_num
ASSIGN	=
IDENFR	INF
SEMICN	;
INTTK	int
IDENFR	min_index
ASSIGN	=
INTLTR	0
SEMICN	;
INTTK	int
IDENFR	k
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	k
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	min_num
GTR	>
IDENFR	dis
LBRACK	[
IDENFR	k
RBRACK	]
AND	&&
IDENFR	book
LBRACK	[
IDENFR	k
RBRACK	]
EQL	==
INTLTR	0
RPARENT	)
LBRACE	{
IDENFR	min_num
ASSIGN	=
IDENFR	dis
LBRACK	[
IDENFR	k
RBRACK	]
SEMICN	;
IDENFR	min_index
ASSIGN	=
IDENFR	k
SEMICN	;
RBRACE	}
IDENFR	k
ASSIGN	=
IDENFR	k
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	book
LBRACK	[
IDENFR	min_index
RBRACK	]
ASSIGN	=
INTLTR	1
SEMICN	;
INTTK	int
IDENFR	j
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	j
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	e
LBRACK	[
IDENFR	min_index
RBRACK	]
LBRACK	[
IDENFR	j
RBRACK	]
LSS	<
IDENFR	INF
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	dis
LBRACK	[
IDENFR	j
RBRACK	]
GTR	>
IDENFR	dis
LBRACK	[
IDENFR	min_index
RBRACK	]
PLUS	+
IDENFR	e
LBRACK	[
IDENFR	min_index
RBRACK	]
LBRACK	[
IDENFR	j
RBRACK	]
RPARENT	)
LBRACE	{
IDENFR	dis
LBRACK	[
IDENFR	j
RBRACK	]
ASSIGN	=
IDENFR	dis
LBRACK	[
IDENFR	min_index
RBRACK	]
PLUS	+
IDENFR	e
LBRACK	[
IDENFR	min_index
RBRACK	]
LBRACK	[
IDENFR	j
RBRACK	]
SEMICN	;
RBRACE	}
RBRACE	}
IDENFR	j
ASSIGN	=
IDENFR	j
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	i
SEMICN	;
IDENFR	n
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	m
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	j
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	j
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	i
EQL	==
IDENFR	j
RPARENT	)
IDENFR	e
LBRACK	[
IDENFR	i
RBRACK	]
LBRACK	[
IDENFR	j
RBRACK	]
ASSIGN	=
INTLTR	0
SEMICN	;
ELSETK	else
IDENFR	e
LBRACK	[
IDENFR	i
RBRACK	]
LBRACK	[
IDENFR	j
RBRACK	]
ASSIGN	=
IDENFR	INF
SEMICN	;
IDENFR	j
ASSIGN	=
IDENFR	j
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	m
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	u
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
COMMA	,
IDENFR	v
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	e
LBRACK	[
IDENFR	u
RBRACK	]
LBRACK	[
IDENFR	v
RBRACK	]
ASSIGN	=
IDENFR	getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	Dijkstra
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	i
ASSIGN	=
INTLTR	1
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LEQ	<=
IDENFR	n
RPARENT	)
LBRACE	{
IDENFR	putint
LPARENT	(
IDENFR	dis
LBRACK	[
IDENFR	i
RBRACK	]
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
