INTTK	int
IDENFR	a
COMMA	,
IDENFR	b
COMMA	,
IDENFR	d
SEMICN	;
INTTK	int
IDENFR	set_a
LPARENT	(
INTTK	int
IDENFR	val
RPARENT	)
LBRACE	{
IDENFR	a
ASSIGN	=
IDENFR	val
SEMICN	;
RETURNTK	return
IDENFR	a
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	set_b
LPARENT	(
INTTK	int
IDENFR	val
RPARENT	)
LBRACE	{
IDENFR	b
ASSIGN	=
IDENFR	val
SEMICN	;
RETURNTK	return
IDENFR	b
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	set_d
LPARENT	(
INTTK	int
IDENFR	val
RPARENT	)
LBRACE	{
IDENFR	d
ASSIGN	=
IDENFR	val
SEMICN	;
RETURNTK	return
IDENFR	d
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
IDENFR	a
ASSIGN	=
INTLTR	2
SEMICN	;
IDENFR	b
ASSIGN	=
INTLTR	3
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	set_a
LPARENT	(
INTLTR	0
RPARENT	)
AND	&&
IDENFR	set_b
LPARENT	(
INTLTR	1
RPARENT	)
RPARENT	)
LBRACE	{
RBRACE	}
IDENFR	putint
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	b
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	a
ASSIGN	=
INTLTR	2
SEMICN	;
IDENFR	b
ASSIGN	=
INTLTR	3
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	set_a
LPARENT	(
INTLTR	0
RPARENT	)
AND	&&
IDENFR	set_b
LPARENT	(
INTLTR	1
RPARENT	)
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	b
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
CONSTTK	const
INTTK	int
IDENFR	c
ASSIGN	=
INTLTR	1
SEMICN	;
IDENFR	d
ASSIGN	=
INTLTR	2
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	c
GEQ	>=
INTLTR	1
AND	&&
IDENFR	set_d
LPARENT	(
INTLTR	3
RPARENT	)
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	d
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	c
LEQ	<=
INTLTR	1
OR	||
IDENFR	set_d
LPARENT	(
INTLTR	4
RPARENT	)
RPARENT	)
LBRACE	{
RBRACE	}
IDENFR	putint
LPARENT	(
IDENFR	d
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
INTLTR	16
GEQ	>=
LPARENT	(
INTLTR	3
MINU	-
LPARENT	(
INTLTR	2
PLUS	+
INTLTR	1
RPARENT	)
RPARENT	)
RPARENT	)
LBRACE	{
IDENFR	putch
LPARENT	(
INTLTR	65
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
LPARENT	(
INTLTR	25
MINU	-
INTLTR	7
RPARENT	)
NEQ	!=
LPARENT	(
INTLTR	36
MINU	-
INTLTR	6
MULT	*
INTLTR	3
RPARENT	)
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	66
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
INTLTR	1
LSS	<
INTLTR	8
NEQ	!=
INTLTR	7
MOD	%
INTLTR	2
RPARENT	)
LBRACE	{
IDENFR	putch
LPARENT	(
INTLTR	67
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
INTLTR	3
GTR	>
INTLTR	4
EQL	==
INTLTR	0
RPARENT	)
LBRACE	{
IDENFR	putch
LPARENT	(
INTLTR	68
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
INTLTR	1
EQL	==
INTLTR	0x66
LEQ	<=
INTLTR	077
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	69
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
INTLTR	5
MINU	-
INTLTR	6
EQL	==
MINU	-
NOT	!
INTLTR	0
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	70
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
INTTK	int
IDENFR	i0
ASSIGN	=
INTLTR	0
COMMA	,
IDENFR	i1
ASSIGN	=
INTLTR	1
COMMA	,
IDENFR	i2
ASSIGN	=
INTLTR	2
COMMA	,
IDENFR	i3
ASSIGN	=
INTLTR	3
COMMA	,
IDENFR	i4
ASSIGN	=
INTLTR	4
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i0
AND	&&
IDENFR	i1
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i0
OR	||
IDENFR	i1
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	67
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i0
GEQ	>=
IDENFR	i1
OR	||
IDENFR	i1
LEQ	<=
IDENFR	i0
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	72
RPARENT	)
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	i2
GEQ	>=
IDENFR	i1
AND	&&
IDENFR	i4
NEQ	!=
IDENFR	i3
RPARENT	)
LBRACE	{
IDENFR	putch
LPARENT	(
INTLTR	73
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	i0
EQL	==
NOT	!
IDENFR	i1
AND	&&
IDENFR	i3
LSS	<
IDENFR	i3
OR	||
IDENFR	i4
GEQ	>=
IDENFR	i4
RPARENT	)
LBRACE	{
IDENFR	putch
LPARENT	(
INTLTR	74
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	i0
EQL	==
NOT	!
IDENFR	i1
OR	||
IDENFR	i3
LSS	<
IDENFR	i3
AND	&&
IDENFR	i4
GEQ	>=
IDENFR	i4
RPARENT	)
IDENFR	putch
LPARENT	(
INTLTR	75
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
