INTTK	int
IDENFR	n
SEMICN	;
INTTK	int
IDENFR	bubblesort
LPARENT	(
INTTK	int
IDENFR	arr
LBRACK	[
RBRACK	]
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	i
SEMICN	;
INTTK	int
IDENFR	j
SEMICN	;
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LSS	<
IDENFR	n
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	j
ASSIGN	=
INTLTR	0
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	j
LSS	<
IDENFR	n
MINU	-
IDENFR	i
MINU	-
INTLTR	1
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	arr
LBRACK	[
IDENFR	j
RBRACK	]
GTR	>
IDENFR	arr
LBRACK	[
IDENFR	j
PLUS	+
INTLTR	1
RBRACK	]
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	tmp
SEMICN	;
IDENFR	tmp
ASSIGN	=
IDENFR	arr
LBRACK	[
IDENFR	j
PLUS	+
INTLTR	1
RBRACK	]
SEMICN	;
IDENFR	arr
LBRACK	[
IDENFR	j
PLUS	+
INTLTR	1
RBRACK	]
ASSIGN	=
IDENFR	arr
LBRACK	[
IDENFR	j
RBRACK	]
SEMICN	;
IDENFR	arr
LBRACK	[
IDENFR	j
RBRACK	]
ASSIGN	=
IDENFR	tmp
SEMICN	;
RBRACE	}
IDENFR	j
ASSIGN	=
IDENFR	j
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
IDENFR	n
ASSIGN	=
INTLTR	10
SEMICN	;
INTTK	int
IDENFR	a
LBRACK	[
INTLTR	10
RBRACK	]
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	0
RBRACK	]
ASSIGN	=
INTLTR	4
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	1
RBRACK	]
ASSIGN	=
INTLTR	3
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	2
RBRACK	]
ASSIGN	=
INTLTR	9
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	3
RBRACK	]
ASSIGN	=
INTLTR	2
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	4
RBRACK	]
ASSIGN	=
INTLTR	0
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	5
RBRACK	]
ASSIGN	=
INTLTR	1
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	6
RBRACK	]
ASSIGN	=
INTLTR	6
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	7
RBRACK	]
ASSIGN	=
INTLTR	5
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	8
RBRACK	]
ASSIGN	=
INTLTR	7
SEMICN	;
IDENFR	a
LBRACK	[
INTLTR	9
RBRACK	]
ASSIGN	=
INTLTR	8
SEMICN	;
INTTK	int
IDENFR	i
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	bubblesort
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	i
LSS	<
IDENFR	n
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	tmp
SEMICN	;
IDENFR	tmp
ASSIGN	=
IDENFR	a
LBRACK	[
IDENFR	i
RBRACK	]
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	tmp
RPARENT	)
SEMICN	;
IDENFR	tmp
ASSIGN	=
INTLTR	10
SEMICN	;
IDENFR	putch
LPARENT	(
IDENFR	tmp
RPARENT	)
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
