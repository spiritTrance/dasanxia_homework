CONSTTK	const
INTTK	int
IDENFR	ascii_0
ASSIGN	=
INTLTR	48
SEMICN	;
INTTK	int
IDENFR	my_getint
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	sum
ASSIGN	=
INTLTR	0
COMMA	,
IDENFR	c
SEMICN	;
WHILETK	while
LPARENT	(
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	c
ASSIGN	=
IDENFR	getch
LPARENT	(
RPARENT	)
MINU	-
IDENFR	ascii_0
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	c
LSS	<
INTLTR	0
OR	||
IDENFR	c
GTR	>
INTLTR	9
RPARENT	)
LBRACE	{
CONTINUETK	continue
SEMICN	;
RBRACE	}
ELSETK	else
LBRACE	{
BREAKTK	break
SEMICN	;
RBRACE	}
RBRACE	}
IDENFR	sum
ASSIGN	=
IDENFR	c
SEMICN	;
WHILETK	while
LPARENT	(
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	c
ASSIGN	=
IDENFR	getch
LPARENT	(
RPARENT	)
MINU	-
IDENFR	ascii_0
SEMICN	;
IFTK	if
LPARENT	(
IDENFR	c
GEQ	>=
INTLTR	0
AND	&&
IDENFR	c
LEQ	<=
INTLTR	9
RPARENT	)
LBRACE	{
IDENFR	sum
ASSIGN	=
IDENFR	sum
MULT	*
INTLTR	10
PLUS	+
IDENFR	c
SEMICN	;
RBRACE	}
ELSETK	else
LBRACE	{
BREAKTK	break
SEMICN	;
RBRACE	}
RBRACE	}
RETURNTK	return
IDENFR	sum
SEMICN	;
RBRACE	}
VOIDTK	void
IDENFR	my_putint
LPARENT	(
INTTK	int
IDENFR	a
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	b
LBRACK	[
INTLTR	16
RBRACK	]
COMMA	,
IDENFR	i
ASSIGN	=
INTLTR	0
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	a
GTR	>
INTLTR	0
RPARENT	)
LBRACE	{
IDENFR	b
LBRACK	[
IDENFR	i
RBRACK	]
ASSIGN	=
IDENFR	a
MOD	%
INTLTR	10
PLUS	+
IDENFR	ascii_0
SEMICN	;
IDENFR	a
ASSIGN	=
IDENFR	a
DIV	/
INTLTR	10
SEMICN	;
IDENFR	i
ASSIGN	=
IDENFR	i
PLUS	+
INTLTR	1
SEMICN	;
RBRACE	}
WHILETK	while
LPARENT	(
IDENFR	i
GTR	>
INTLTR	0
RPARENT	)
LBRACE	{
IDENFR	i
ASSIGN	=
IDENFR	i
MINU	-
INTLTR	1
SEMICN	;
IDENFR	putch
LPARENT	(
IDENFR	b
LBRACK	[
IDENFR	i
RBRACK	]
RPARENT	)
SEMICN	;
RBRACE	}
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	n
ASSIGN	=
IDENFR	my_getint
LPARENT	(
RPARENT	)
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	n
GTR	>
INTLTR	0
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	m
ASSIGN	=
IDENFR	my_getint
LPARENT	(
RPARENT	)
SEMICN	;
IDENFR	my_putint
LPARENT	(
IDENFR	m
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
IDENFR	n
ASSIGN	=
IDENFR	n
MINU	-
INTLTR	1
SEMICN	;
RBRACE	}
RETURNTK	return
INTLTR	0
SEMICN	;
RBRACE	}
