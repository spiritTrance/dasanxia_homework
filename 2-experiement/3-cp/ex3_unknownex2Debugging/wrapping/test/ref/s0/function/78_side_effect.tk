INTTK	int
IDENFR	a
ASSIGN	=
MINU	-
INTLTR	1
COMMA	,
IDENFR	b
ASSIGN	=
INTLTR	1
SEMICN	;
INTTK	int
IDENFR	inc_a
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	b
ASSIGN	=
IDENFR	a
SEMICN	;
IDENFR	b
ASSIGN	=
IDENFR	b
PLUS	+
INTLTR	1
SEMICN	;
IDENFR	a
ASSIGN	=
IDENFR	b
SEMICN	;
RETURNTK	return
IDENFR	a
SEMICN	;
RBRACE	}
INTTK	int
IDENFR	main
LPARENT	(
RPARENT	)
LBRACE	{
INTTK	int
IDENFR	k
ASSIGN	=
INTLTR	5
SEMICN	;
WHILETK	while
LPARENT	(
IDENFR	k
GEQ	>=
INTLTR	0
RPARENT	)
LBRACE	{
IFTK	if
LPARENT	(
IDENFR	inc_a
LPARENT	(
RPARENT	)
AND	&&
IDENFR	inc_a
LPARENT	(
RPARENT	)
AND	&&
IDENFR	inc_a
LPARENT	(
RPARENT	)
RPARENT	)
LBRACE	{
IDENFR	putint
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	b
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RBRACE	}
IFTK	if
LPARENT	(
IDENFR	inc_a
LPARENT	(
RPARENT	)
LSS	<
INTLTR	14
OR	||
IDENFR	inc_a
LPARENT	(
RPARENT	)
AND	&&
IDENFR	inc_a
LPARENT	(
RPARENT	)
MINU	-
IDENFR	inc_a
LPARENT	(
RPARENT	)
PLUS	+
INTLTR	1
RPARENT	)
LBRACE	{
IDENFR	putint
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
IDENFR	b
ASSIGN	=
IDENFR	b
MULT	*
INTLTR	2
SEMICN	;
RBRACE	}
ELSETK	else
LBRACE	{
IDENFR	inc_a
LPARENT	(
RPARENT	)
SEMICN	;
RBRACE	}
IDENFR	k
ASSIGN	=
IDENFR	k
MINU	-
INTLTR	1
SEMICN	;
RBRACE	}
IDENFR	putint
LPARENT	(
IDENFR	a
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	32
RPARENT	)
SEMICN	;
IDENFR	putint
LPARENT	(
IDENFR	b
RPARENT	)
SEMICN	;
IDENFR	putch
LPARENT	(
INTLTR	10
RPARENT	)
SEMICN	;
RETURNTK	return
IDENFR	a
SEMICN	;
RBRACE	}
